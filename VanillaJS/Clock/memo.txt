★ 객체 생성 방법 ★
- new 클래스이름()
- (Ex) new Date()



interval
- 매번 일어나야 하는 무언가
- (Ex) '매 2초' 라고 하면 이거 자체가 interval
-       매 2초마다 무슨 일이 일어나게 하고 싶을 때 사용하는 것

setInterval
- setInterval(실행할 함수, 실행할 함수의 반복주기)
- ★ 실시간으로 바뀜 ★


setTimeout
- 한번만 일어나야 하는 무언가

setTimeout
- setInterval(실행할 함수, 실행할 함수의 반복주기)

★ 1000ms == 1초 ★



[개발자도구 - 콘솔창]
new Date()
: Thu Jun 27 2024 03:36:32 GMT+0900 (한국 표준시) {}

getFullYear();    년도
getMonth();       월          1월 - 0, 2월 - 1, ~     getMonth()+1;을 해줘야 정확한 월 출력됨
getDate();        일(날짜)
getDay();         요일        월요일 - 1, 화요일 - 2, ~
getHours();       시
getMinutes();     분
getSeconds();     초

const date = new Date();
date.getFullYear();
-> 2024
date.getMonth();
-> 06



[ padStart() ]
- string에 쓸 수 있는 함수

- ★ date.getHours(); 시간은 사용 불 가 ★
    getHours()는 number, 숫자라서 불가능

    사용하고 싶다면? String(new Date().getHours()); 이런식으로 사용해야함
    ★ String (대문자)로 작성해야 형변환임을 정확히 인식함

- (Ex) "1".padStart(2, "0");
      - 길이가 1인 문자를 길이를,
        padStart()를 써서 padding을 string의 시작 부분에 추가해 달라고 하는 것

      - string인 "1"의 앞쪽 시작 부분에 "0"을 붙여서
        문자열의 길이가 2가 되도록 만들어라

       "17".padStart(2, "0");
      - 하지만,
        "17" 이라는 string에
        길이가 2가 되도록 시작 부분에 "0"을 붙인다고(채운다) 해도
        이미 string의 길이가 2라서 padStart()는 아무 동작도 안함
  (결과) "01"

  - (Ex 2)
    "hello".padStart(10, "x");
    "xxxxxhello"



  [ padEnd() ]
- string에 쓸 수 있는 함수
- padStart()와 같지만, 문자열을 뒤쪽에 추가하는 것
- (Ex) "1".padEnd(2, "0");
  (결과) "10"

  - (Ex 2)
    "hello".padEnd(10, "x");
    "helloxxxxx"